# SonarQube configuration file
#
# Sample Ruby Sonar file - https://docs.sonarsource.com/sonarqube-server/10.6/analyzing-source-code/languages/ruby/
# properties defined in https://docs.sonarsource.com/sonarqube-server/latest/analyzing-source-code/analysis-parameters/
#
# view this repo in sonar: https://sonar.progress.com/dashboard?id=chef_omnitruck-service_AYq3jKS4ub6NcyE4pb7c&codeScope=overall>

# Required metadata
sonar.projectKey=chef_omnitruck-service_AYq3jKS4ub6NcyE4pb7c
# project name is 3 parts: "Chef" + "<area/product>" + "<repo>" with underscores between
# <area/product> choices: Chef-Agents | Chef-Automate | Chef360 | Chef-Habitat | Chef-Infra-Server | Chef-Shared-Services
# example project name: chef/chef-vault repo would be Chef_Chef-Infra-Client_chef-vault
sonar.projectName=Chef_Chef-Shared-Services_omnitruck-service
# sonar.projectVersion=1.0
# sonar.projectDescription=

# Language - https://docs.sonarsource.com/sonarqube-server/latest/analyzing-source-code/languages/overview/ go, ruby, rust
sonar.language=go
sonar.sources=.
sonar.exclusions=**/*_test.go,**/logger/logger.go,**/clients/license.go,**/*mock.go
# sonar.exclusions=**/*_test.go, **/*.js, **/*.sql, **/*.yml, **/*.yaml
# previous version - sonar.go.coverage.reportPaths=cov.out
# previous version - sonar.python.version=3.7, 3.8, 3.9

# Unit tests
sonar.tests=.
sonar.test.inclusions=**/*_test.go
sonar.go.coverage.reportPaths=test/coverage/coverage.out
# sonar.externalIssuesReportPaths	Comma-delimited list of paths to generic issue reports. 
# sonar.sarifReportPaths	Comma-delimited list of paths to SARIF issue reports.
# sonar.dependencyCheck.htmlReportPath=./dependency-check-report.html -- import OWASP dependency check report

# Additional settings
# sonar.qualitygate.wait=false
# sonar.qualitygate.timeout=300

# skip C-language processor
sonar.c.file.suffixes=-
sonar.cpp.file.suffixes=-
sonar.objc.file.suffixes=-
