definitions:
  omnitruck.ArchList:
    additionalProperties:
      $ref: '#/definitions/omnitruck.PackageMetadata'
    type: object
  omnitruck.PackageList:
    additionalProperties:
      $ref: '#/definitions/omnitruck.PlatformVersionList'
    type: object
  omnitruck.PackageMetadata:
    properties:
      sha1:
        type: string
      sha256:
        type: string
      url:
        type: string
      version:
        type: string
    type: object
  omnitruck.PlatformList:
    additionalProperties:
      type: string
    type: object
  omnitruck.PlatformVersionList:
    additionalProperties:
      $ref: '#/definitions/omnitruck.ArchList'
    type: object
  services.ErrorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
      status_text:
        type: string
    type: object
host: localhost:3002
info:
  contact: {}
  description: Licensed Commercial Omnitruck API
  license:
    url: http://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /{channel}/{product}/download:
    get:
      description: |-
        Get details for a particular package.
        The `ACCEPT` HTTP header with a value of `application/json` must be provided in the request for a JSON response to be returned
      parameters:
      - description: Channel
        enum:
        - current
        - stable
        in: path
        name: channel
        required: true
        type: string
      - description: Product
        example: chef
        in: path
        name: product
        required: true
        type: string
      - description: Platform, valid values are returned from the `/platforms` endpoint.
        example: ubuntu
        in: query
        name: p
        required: true
        type: string
      - description: 'Platform Version, possible values depend on the platform. For
          example, Ubuntu: 16.04, or 18.04 or for macOS: 10.14 or 10.15.'
        example: "20.04"
        in: query
        name: pv
        required: true
        type: string
      - description: Machine architecture, valid values are returned by the `/architectures`
          endpoint.
        example: x86_64
        in: query
        name: m
        required: true
        type: string
      - default: latest
        description: Version of the product to be installed. A version always takes
          the form `x.y.z`
        in: query
        name: v
        type: string
      - description: License ID
        in: header
        name: license_id
        type: string
      - default: false
        description: EOL Products
        in: query
        name: eol
        type: boolean
      responses:
        "302":
          description: Found
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/services.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/services.ErrorResponse'
  /{channel}/{product}/metadata:
    get:
      description: |-
        Get details for a particular package.
        The `ACCEPT` HTTP header with a value of `application/json` must be provided in the request for a JSON response to be returned
      parameters:
      - description: Channel
        enum:
        - current
        - stable
        in: path
        name: channel
        required: true
        type: string
      - description: Product
        example: chef
        in: path
        name: product
        required: true
        type: string
      - description: Platform, valid values are returned from the `/platforms` endpoint.
        example: ubuntu
        in: query
        name: p
        required: true
        type: string
      - description: 'Platform Version, possible values depend on the platform. For
          example, Ubuntu: 16.04, or 18.04 or for macOS: 10.14 or 10.15.'
        example: "20.04"
        in: query
        name: pv
        required: true
        type: string
      - description: Machine architecture, valid values are returned by the `/architectures`
          endpoint.
        example: x86_64
        in: query
        name: m
        required: true
        type: string
      - default: latest
        description: Version of the product to be installed. A version always takes
          the form `x.y.z`
        in: query
        name: v
        type: string
      - description: License ID
        in: header
        name: license_id
        type: string
      - default: false
        description: EOL Products
        in: query
        name: eol
        type: boolean
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/omnitruck.PackageMetadata'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/services.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/services.ErrorResponse'
  /{channel}/{product}/packages:
    get:
      description: |-
        Get the full list of all packages for a particular channel and product combination.
        By default all packages for the latest version are returned. If the v query string parameter is included the packages for the specified version are returned.
      parameters:
      - description: Channel
        enum:
        - current
        - stable
        in: path
        name: channel
        required: true
        type: string
      - description: Product
        example: chef
        in: path
        name: product
        required: true
        type: string
      - description: Version
        in: query
        name: v
        type: string
      - description: License ID
        in: header
        name: license_id
        type: string
      - default: false
        description: EOL Products
        in: query
        name: eol
        type: boolean
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/omnitruck.PackageList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/services.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/services.ErrorResponse'
  /{channel}/{product}/versions/all:
    get:
      description: Get a list of all available version numbers for a particular channel
        and product combination
      parameters:
      - description: Channel
        enum:
        - current
        - stable
        in: path
        name: channel
        required: true
        type: string
      - description: Product
        in: path
        name: product
        required: true
        type: string
      - description: License ID
        in: header
        name: license_id
        type: string
      - default: false
        description: EOL Products
        in: query
        name: eol
        type: boolean
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/services.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/services.ErrorResponse'
  /{channel}/{product}/versions/latest:
    get:
      description: Get the latest version number for a particular channel and product
        combination.
      parameters:
      - description: Channel
        enum:
        - current
        - stable
        in: path
        name: channel
        required: true
        type: string
      - description: Product
        in: path
        name: product
        required: true
        type: string
      - description: License ID
        in: header
        name: license_id
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/services.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/services.ErrorResponse'
  /architectures:
    get:
      description: |-
        Returns a valid list of valid platform keys along with friendly names.
        Any of these architecture keys can be used in the p query string value in various endpoints below.
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/services.ErrorResponse'
  /platforms:
    get:
      description: |-
        Returns a valid list of valid platform keys along with full friendly names.
        Any of these platform keys can be used in the p query string value in various endpoints below.
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/omnitruck.PlatformList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/services.ErrorResponse'
  /products:
    get:
      description: |-
        Returns a valid list of valid product keys.
        Any of these product keys can be used in the <PRODUCT> value of other endpoints. Please note many of these products are used for internal tools only and many have been EOLâ€™d.
      parameters:
      - description: EOL Products
        in: query
        name: eol
        type: boolean
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/services.ErrorResponse'
swagger: "2.0"
